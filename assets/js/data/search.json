[ { "title": "ESPWX Weather Modules", "url": "/posts/espwx/", "categories": "Smart Home", "tags": "weatherstation", "date": "2022-02-09 00:00:00 +1100", "snippet": "IntroductionThis article is part of a series on building a weather station, utilising common software with a fewdifferent approaches to hardware. The ultimate aim of this project is to support a wide variety ofsensors on both a low-power remote microcontroller based weather station, or a more powerful full Linux system utilising a Pi.The best weather data collection, reporting and publishing software I‚Äôve come across is WeeWX‚Üó both the Pi and ESP versions of this project cater for. While all these related weather station articlesand weather-hardware projects are designed to feed WeeWX, they can be used in any number of weather applications.Parts ListParts marked with ‚öôÔ∏è came from existing items in my parts store and were chosen for that reason. ‚öôÔ∏è ESP32 DevKit üõí ($12) ESP D32 Mini üõí ($12) Sensors ‚öôÔ∏è Waterproof DS18B20 üõí ($10) External Temperature ‚öôÔ∏è BMP280 üõí ($13) Temperature, Humidity and Barometric Pressure Misol Weather Station Parts ‚öôÔ∏è Misol Windspeed MS-WH-SP-WS üõí ($40) Wind Direction (MS-WH-SP-WD) Rain Guage (WH-SP-RG) As usual Amazon affiliate links are provided, but all of this can easily be found on AliExpress too.If you‚Äôd like to buy all the entire MISOL kit not as ‚Äòparts‚Äô, see the PiWX Weather Station‚Üó article,you can get the exact same software, data and weather feeds as this article presents in a much more user-friendlyready-to-report way.ESP32I also always have a pile of ESP32 or ESP8266 SoC microcontrollers on hand, while the Wemos D1 Mini (right) form factor is my preferred form factor for production projects, the standard DevKit (left) with header pins is easier for prototyping andtesting.The ESP also enables this project to be used both as data source sending ASCII data over UART to the host computer for processing, as I intend to use it, the final code produced will additionally support the ESP WiFi networking stack and MQTT client to publish data to any network.Windspeed TestingNow that the radio has been working and cabled for a while, it‚Äôs time to take a look at the next device that‚Äôs been sitting here begging for me to take a look at for way too long; it‚Äôs the anonometer. I picked it up some time ago and didn‚Äôt recall any datasheet for it, but managed to identify it as a MS-WH-SP-WD for the Misol Weather Meter, with lots of info and examples available online for it as ‚Äúspare parts‚Äù are available for it from AliExpress.It simply closes a switch each rotation with each rotation representing a 2.4km/h windspeed, small and plastic:Connecting the sensor to a ESP is relatively trivial; trim off the supplied RJ11 connector and connect using GPIO12 (supply) and GPIO13 (interrupt) on the ESP32. We use a GPIO for the supply side so that later on we can programatically turn on/off the sensor, but for now we‚Äôll just leave it turned on but utilising the final pin.For testing purposes we‚Äôll just make sure our cabling works and we can trigger an interrupt function every time it trips it‚Äôs switch, here‚Äôs some Arduino IDE code for the test:#include &quot;Arduino.h&quot;const byte ledPin = 2;const byte interruptPin = 13;const byte powerPin = 12;volatile byte state = LOW;void setup() { delay(500); Serial.begin(115200); pinMode(ledPin, OUTPUT); pinMode(interruptPin, INPUT_PULLDOWN); pinMode(powerPin, OUTPUT); digitalWrite(powerPin, HIGH); attachInterrupt(digitalPinToInterrupt(interruptPin), blink, CHANGE);}void loop() { digitalWrite(ledPin, state);}void blink() { if(state) { Serial.print(&quot;PING\\n&quot;); } state = !state;}This isn‚Äôt yet doing any timing or math to calculate windspeed; it‚Äôs simply a test to ensure everything can work the way we want it to before we move on to the other sensors." }, { "title": "Phony Radio - My VoIP Setup", "url": "/posts/allstar/", "categories": "Networking, Radio", "tags": "voip, software, pi, radio, dmr, allstar", "date": "2022-01-08 00:00:00 +1100", "snippet": "Let‚Äôs get this out of the way first. The article title is tounge in cheek - I believe any means of connecting to each other, bridging internet, radio, voice, data and anything else is a good thing. Each and all to their own modes - some hams out there will argue CW is the only true mode. This project is bigger than radio; it‚Äôs focus is VoIP as a phone system that happens to be integrated with a range of other interesting connections, including radio using parts of the DVSwitch, hamvoip &amp;amp; Allstar projects.One of the reasons the Amateur Radio Service around the world is granted access to the spectrum is to support emergency services - in a modern response to disaster that ‚Äúcommunications support‚Äù must include WiFi, Digital, VoIP Integration and a range of networking options - this is why experimentation like this, I feel is essential.This project is a little different from most that I publish and is a continually evolving work in progress - because of this it will be presented as a series of articles over the next few months, each diving into a different aspect of the configuration, the background and the reason why many decisions were made.I already had hardware VoIP telephones; and as I got into ham radio I found asterisk, a product I was already familiar with used across various parts of the hobby; but I didn‚Äôt want to run a bunch of different copies of Asterisk - that just didn‚Äôt seem like a sensible thing to do (spoiler alert: I ended up with two, long story, but resolving that is on the to do list!)Some Acronyms Phone Systems LTE - Long Term Evolution - Cellular/Mobile networks. PBX - Private Branch Exchange - A private branch exchange is a telephone system within an enterprise that switches calls between users on local lines, while enabling all users to share a certain number of external phone lines. PSTN - Publish Switched Telephone Network - The global network of public telephone numbers, including cellular services. VoIP - Voice over Internet Protocols. DID - Direct Inbound Dial - An inbound telephone number on the PSTN. VoIP Protocols SIP - Session Initiation Protocol - The Session Initiation Protocol (SIP) is a signaling protocol used for initiating, maintaining, and terminating real-time sessions that include voice, video and messaging applications. IAX - Inter-Asterisk Exchange (trunking) - Inter-Asterisk eXchange (IAX) is a communications protocol native to the Asterisk private branch exchange (PBX) software. Ham Radio Terms DV - Digital Voice RoIP - Radio over Internet Protocols. ASL - AllStarLink - AllStarLink is a network of Amateur Radio repeaters, remote base stations and ‚Äúhot spots‚Äù. DMR - Digital Mode Radio - Digital Mobile Radio (DMR), is an open digital radio standard that combines voice, data, features and applications together. MMDVM - Multi-Mode Digital Voice Modem NXDN - Next Generation Digital Narrowband USRP - Universal Software Radio Peripheral - The USRP protocol includes signaling (TX/RX transitions) and audio transfer using UDP. VKDMR - VK DMR - The Australia-Wide DMR+ Network. Features Covered Asterisk (ASL) Based PBX Hardware IP Telephones Cisco 7940 Yeelink x Softphones Linphone on Android VoIP Trunks Hamshack Hotline Public Switched Telephone Network (x2) Amateur Radio AllStarLink Analogue Node DMR+ (VK DMR) Digital Node Local MMDVM Hotspot Streaming Audio icecast integration Broadcastify Feeds Internet Radio PSTN InterconnectionI currently utilise two services for Public Switched Telephone Network interoperability. 10x DID Inbound Sydney geographically significant numbers with https://freepbxhosting.com.au/ ‚Üó 1x DID Inbound Tasmanian number with https://crazytel.com.au ‚ÜóBoth providers have the ability to make outbound PSTN telephone calls and can be prefix-dialled to specify or alternatively Aussie VoIP/FreePBX Hosting if 0 is dialed (for outside line) and a ITU compliant telephone number.TL;DRIf you want to jump straight to a relevant article in the series, here‚Äôs the links, if you‚Äôd like some more context around each article in the scope of this project, they each have their own introduction later: Part 1: The Options: Untangling the ham VoIP mess Part 2: Getting up and Running Part 3: Phones, Trunks &amp;amp; Inbound Part 4: Setting up the Hotspot Part 5: AllStarLink for Analogue Radio Part 6: DVSwitch Suite for Digital Radio Part 7: Streaming RadioPart 1: The OptionsThere is a huge array of options out there to consider for this solution; but entering this I knew I wanted to use a recent(ish) version of Asterisk as my primary VoIP server. But what to run on it?In our first article we take a look at the options available and evaluate a few along with some background to the software, what each part does and what ultimately led me to chose hamvoip as a starting point for this project.Untangling the ham VoIP messPart 2: Getting up and RunningGetting up and RunningPart 3: Phones, Trunks &amp;amp; InboundFirst we‚Äôre going to get the hardware VoIP phones I own up and running. Many years ago when running a small business from home I aquired two handsets, a Cisco 7940 and a Yealink.Part 4: Setting up the HotspotSetting up the HotspotPart 5: AllStarLink for AnalogueAllStarLink for Analogue RadioPart 6: The DVSwitch Suite for DigitalThe DVSwitch Suite for Digital RadioPart 7: Streaming RadioStreaminng Radio" }, { "title": "Setting up DVSwitch Suite for Digital Radio", "url": "/posts/dvswitch/", "categories": "Networking, Radio", "tags": "voip, radio, dmr, allstar", "date": "2022-01-07 00:00:00 +1100", "snippet": "This is part of a series of articles on my VoIP and Telephony setup. In this article I take a deep dive into the available pre-cooked images (with a focus on those for Pi) and the tools that make up these images, what their function and purpose is. This is written as a personal investigation into what‚Äôs out there and my personal experiences from either playing with or investigating them.You can find the main article at Phony Radio, along with some common terms and definition used throughout the series. While each article is designed to be somewhat standalone, I do recommend reading first to put this article in context.Setting up DVSwitch Suite for Digital Radio" }, { "title": "Untangling the ham VoIP mess", "url": "/posts/ham-voip/", "categories": "Networking, Radio", "tags": "voip, radio, dmr, allstar", "date": "2022-01-06 00:00:00 +1100", "snippet": "This is part of a series of articles on my VoIP and Telephony setup. In this article I take a look across the technologies, protocols, services, networks and all the bits that make up the ham VoIP ecosystem; from repeater linking to strict VoIP-only networks for hams and the pre-cooked Raspberry Pi images available to you.You can find the main article at Phony Radio, along with some common terms and definition used throughout the series. While each article is designed to be somewhat standalone, I do recommend reading first to put this article in context.Untangling the messWhen starting out the whole world of ham voip seemed to be a confusing landscape of similiar-yet-competing solutions, most of which it turned out at the end of the day were based on the same underlying tools. That scope quickly changed to a quick primer on all of the parts, terms and technologies with links to other resources. If there is anything you feel I missed, please let me know as I‚Äôd like to keep this article up to date and as complete as hamingly possible.VoIP ProtocolsSIPThe Session Initiation Protocol (SIP) is a signaling protocol used for initiating, maintaining, and terminating real-time sessions that include voice, video and messaging applications. It has been the defacto open standard for VoIP networks for some time.The SIP protocol is used for both DID (Direct Inbound Dial) and telephony devices, additionally it is industry proven and used as session initiation by LTE mobile networks. RFC 2543 ‚ÜóIAXInter-Asterisk eXchange (IAX) is a communications protocol native to the Asterisk private branch exchange (PBX) software, and is supported by a few other softswitches, PBX systems, and softphones. It is used for transporting VoIP telephony sessions between servers and to terminal devices.The original IAX protocol is deprecated and has been superseded by a second version, commonly called IAX2. The IAX2 protocol was published as an informational (non-standards-track) RFC 5456 by discretion of the RFC Editor in February 2010. For the purposes of this discussion both IAX and IAX2 are referred to as IAX.The primary advantage of IAX over SIP is that inter-office routing is made much easier with IAX allowing Asterisk exchanges to virtually join together; the protocol is used by Hamshack Hotline for instance to form one big virtual exchange. Connecting two Asterisk Instances Using IAX2 ‚Üó RFC 5456 ‚ÜóUSRPUniversal Software Radio Peripheral (USRP) is a range of software-defined radios designed and sold by Ettus Research and its parent company, National Instruments. Developed by a team led by Matt Ettus, the USRP product family is commonly used by research labs, universities, and hobbyists.Is it a bird, err, I mean VoIP Protocol, or a Repeater Linking protocol? It‚Äôs a little of both, but it‚Äôs closer to SIP and IAX than it is the wider technology stack made up by the Repeater Linking category; so I decided to include it here.Ham / Repeater ProtocolsEchoLinkEchoLink¬Æ software allows licensed Amateur Radio stations to communicate with one another over the Internet, using streaming-audio technology. The program allows worldwide connections to be made between stations, or from computer to station, greatly enhancing Amateur Radio‚Äôs communications capabilities. There are more than 300,000 validated users worldwide ‚Äî in 151 of the world‚Äôs 193 nations ‚Äî with about 6,000 online at any given time.IRLPASL (IAX)IAX fits into both the VoIP and Repeater linking protocols thanks to it‚Äôs use by AllStarLink as the backbone to it‚Äôs network.See IAX above; The AllStarLink network is linked by hotspots and repeaters using the inter-asterisk exchange protocol (IAX).Digital Radio TechnologiesDMRNXDNYSF / SF2P25D-StarD-STAR (Digital Smart Technologies for Amateur Radio) is a radio system which offers digital voice and data communication. Repeater sites are pre-dominantly connected over the Internet and form a wide area amateur radio network as a result that can span states, countries, continents or the entire world.D-Star offers digital voice and slow and high-speed data communications. Slow-speed digital voice and data are transported at 4800 bps, of which 3600 bps is used for voice transmission and the remaining 1200 bps is used for syncronization and general use. Of that 1200 bps, around 900 bps is available for the transmission of data. High-Speed digital data communication is transported at 128kpbs and is capable of supporting Ethernet packets and also is fast enough to use for Internet applications such as displaying web pages.D-Star is capable of connecting repeater sites using the Internet and forms a world-wide radio network.Since the dawn of D-Star, there have been a few reflectors and networks built to support this digital mode. XLX is the newest edition of reflectors that allows you to spin up your very own D-Star or DMR, or YSF reflector. Reflectors like REF and DCS, already have servers in place that you request access to use: REF refers to the original reference system or DPLUS that was not originally implemented into D-Star. DCS is the next generation of D-Star technology. ‚ÄúModule A‚Äù on all DCS reflectors are linked together. This saw the introduction of ircDDB (yes it means what you think it does, see below!) XRF is the first generation of D-Star X-Reflectors XLX is the first multi-protocol D-Star reflector with integrated transcoding and entirely opensource based on the XLX software.What is ircDDB you ask? It is what it sounds like, an irc-based Distributed Database (second take, yes you heard that right). Internet Relay Chat to exchange callsign and routing information between D-Star gateways. A realtime view of the D-Star traffic can be found at http://www.ircddb.net/live.htm ‚Üó. Information on https://www.dstar.org.au/ ‚Üó.NetworksHamshack HotlineHamshack hotline is the least radio of all the things we‚Äôll be covering in this article, but they don‚Äôt claim to be radio. They are there to provide a standards-based VoIP service for hams around the world to phone each other in the traditional telephone sense of the word; designed for using while testing radio-based communications or as a shack bat-phone. n their own words: Hamshack Hotline (HH) is a dedicated Voice-Over-Internet-Protocol (VOIP) network that is free to amateur radio operators around the world. The goal of the Hamshack Hotline is not to replace the traffic that is carried over RF, but rather augment it when conditions are diminished or otherwise busy. The hotline is the brainchild of John Rogers, K1WIZ. He always imagined having a VOIP network dedicated just to ham radio operators. It‚Äôs been widely adopted by Emergency Operations Centers (EOC), ham radio clubs &amp;amp; Amateur Radio Emergency Services (ARES) groups ‚Äî and individual ham shacks alike.My hamshack hotline number is 33 000 000 30, any hamshack hotline user in the world can phone that number from their hamshack hotline service and the call will land in my VoIP Network and seek a path to terminate the call (usually my ring all group). https://k0lwc.com/hamshack-hotline-the-ham-radio-bat-phone/ ‚Üó. https://www.facebook.com/groups/hamshack/ ‚Üó.AllStarLinkThis is always a fun one, as AllStarLink is, accoring to their website: AllStarLink is a network of Amateur Radio repeaters, remote base stations and hot spots accessible to each other via Voice over Internet Protocol. AllStarLink runs on a dedicated computer (including the Rasperry Pi) that you host at your home, radio site or computer center.In this network category, AllStarLink refers to the first definition, for clarity in my articles, I will use the term ‚Äúthe AllStarLink network‚Äù when referring to the network and wither AllStar, AllStarLink or ASL when referring to the software (see below).The AllStar network is an analog network using VoIP technology to interconnect repeaters. The AllStar network is huge; it‚Äôs popularity owed mostly to the availability of pre-cooked images for Raspberry Pi and cheap RF front end ‚Äúhats‚Äù for them. These can be private for personal use using these low-powered hats, or connected to a repeater to provide internet access to the repeater and the ability to connect nodes together in, what traditional VoIP would call ‚Äúparty-lines‚Äù.Because AllStar is an inter-linked network of analog repeater nodes, there are no limitations to the number of nodes connected.Keying up my local VK2ROT repeater and dialing *32462 will connect it, one of our club repeaters to the Puget Sound Repeater Group network, allowing multiple local stations to participate in their regular nets. Doing so with a hotspot however essentially becomes your own virtual local repeater (with or without a radio attached), allowing you to send the same DTMF commands as above and join without annoying everyone else monitoring your regional/club repeater.Taking a look at nodes connected to that particular node right now, with nothing scheduled for it there are quite a few stations monitoring it. Being aware of this is good operational practice, you don‚Äôt want to be having a long ragchew at 01:00 local for Seattle keying up several repeaters across their local area, especially when neither party is local.I currently run AllStarLink nodes: 56108 - Primary - Public 560020 - Internal Monitoring 560021 - Internal MonitoringThe primary public node is usually monitored 24x7 (volume adjusted for time of day) on a SIP speakerphone. This node will periodically connect and disconnect from other nodes on a time-based schedule.You can find the current list of nodes including those currently keyed up at https://www.allstarlink.org/nodelist/ ‚Üó.Server SoftwareAllStarLink / app_rptFor the purposes of this discussion we‚Äôll focus on the software, or second definition of the ASL platform. It is based on the open source Asterisk PBX running a custom extension known as app_rpt. AllStarLink‚Äôs primary use is as a dedicated computer node wired to your repeater or radio. Connections from Echolink, other VoIP clients and telephone calls are supported.For clarity I will use AllStarLink to refer to a complete AllStar node configuration/software and app_rpt to to refer to it‚Äôs core functionality and the Asterisk module that provides it.AllStar Monitoring Softwareallmon2 Allmon is a web site for managing one or more app_rpt (aka Allstar) nodes.Each managed local node shows a list of connected nodes. The list issorted in reverse order of the most recently received node. So the lastnode to talk is always at the top of the list. Any node that is currentlybeing received will be highlighted by a green background as well as movingto the top of the list. The node list is updated once a second giving near-real-time status. https://github.com/AllStarLink/AllMon2 ‚Üó.supermon2The DVSwitch SuiteMMDVM Bridge MMDVM_Bridge is used to provide an interconnection between digital networks. It does this by decomposing each network protocol and creating an agnostic version of the stream. This generalized form can then be re-constructed into a new network stream of a different type. MMDVM_Bridge works in conjunction with other bridging tools to allow for the connection of networks with differing audio formats and metadata components. Support for DMR, D-Star, Yaesu Fusion, P25 and NXDN networks are provided. In addition, bridging to analog networks (Allstar, Echolink) can be accomplished with little effort.MMDVM on dvswitch Group ‚Üó.Analog BridgeBridge ASL to a digital network ASL (asterisk) has a great channel driver called chan_usrp. This driver was developed to connect ASL to specialized hardware, but does not actually require the hardware. The USRP protocol includes signaling (TX/RX transitions) and audio transfer using UDP. The audio format is 8KHZ signed 16 bit PCM samples. Analog_Bridge was developed to consume these packets and transcode them to several digital audio formats.Analog Bridge on dvswitch Wiki ‚Üó.Quantar BridgeNXDN Gateway/ParrotP25 Gateway/Parrot/ReflectorircDDBGatewayAMBE / md380XLXClient SoftwareImages / Distributions ¬† Pi Star ASL Image Hamvoip Base OS Raspbian Raspbian Arch Asterisk version ¬† ¬† ¬† Pi-StarPi-Star is a software image built by Andy Taylor (MW0MWZ) based on Raspbian Linux.From the Pi-Star website: The other major components that make up Pi-Star include the excellent software stacks by Jonathan Naylor G4KLX &amp;amp; others - MMDVMHost / DStarRepeater and associated tools / programs. This software stack is fairly feature complete and contains many innovations and tools that are usefull to hotspot operators and repeater keepers alike.HamvoipHamvoip is an AllStar Asterisk pre-cooked image based on Archlinux developed by David McGough, KB4FXC. The team behind this project seem to have done a fair bit of extra work in bringing everything together, building app_rpt against a more modern asterisk and packaging it all together.Additionally hamvoip has packages for dvswitch which contain the MMDVHost suite by G4KLX and others.Conference/Repeater GroupsVKDMRTGIFFreeSTARFreeStar is a network with a ethos based around ‚Äúfreedom to connect‚Äù. They operate a network of UK-based repeaters and interconnections to every ham VoIP technology available; including Hamshack Hotline, EchoLink, AllStar, YSF, System Fusion II, Wires-X, DMR, DMR+IPSC2, Module-X, D-Star and M17.IAXRptwindows softphone" }, { "title": "Phony Radio - My VoIP Setup", "url": "/posts/phony/", "categories": "Networking, Radio", "tags": "voip, software, pi, radio, dmr, allstar", "date": "2022-01-05 00:00:00 +1100", "snippet": "Let‚Äôs get this out of the way first. The article title is tounge in cheek - I believe any means of connecting to each other, bridging internet, radio, voice, data and anything else is a good thing. Each and all to their own modes - some hams out there will argue CW is the only true mode. This project is bigger than radio; it‚Äôs focus is VoIP as a phone system that happens to be integrated with a range of other interesting connections, including radio using parts of the DVSwitch, hamvoip &amp;amp; Allstar projects.One of the reasons the Amateur Radio Service around the world is granted access to the spectrum is to support emergency services - in a modern response to disaster that ‚Äúcommunications support‚Äù must include WiFi, Digital, VoIP Integration and a range of networking options - this is why experimentation like this, I feel is essential.This project is a little different from most that I publish and is a continually evolving work in progress - because of this it will be presented as a series of articles over the next few months, each diving into a different aspect of the configuration, the background and the reason why many decisions were made.I already had hardware VoIP telephones; and as I got into ham radio I found asterisk, a product I was already familiar with used across various parts of the hobby; but I didn‚Äôt want to run a bunch of different copies of Asterisk - that just didn‚Äôt seem like a sensible thing to do (spoiler alert: I ended up with two, long story, but resolving that is on the to do list!)Some Acronyms Phone Systems LTE - Long Term Evolution - Cellular/Mobile networks. PBX - Private Branch Exchange - A private branch exchange is a telephone system within an enterprise that switches calls between users on local lines, while enabling all users to share a certain number of external phone lines. PSTN - Publish Switched Telephone Network - The global network of public telephone numbers, including cellular services. VoIP - Voice over Internet Protocols. DID - Direct Inbound Dial - An inbound telephone number on the PSTN. VoIP Protocols SIP - Session Initiation Protocol - The Session Initiation Protocol (SIP) is a signaling protocol used for initiating, maintaining, and terminating real-time sessions that include voice, video and messaging applications. IAX - Inter-Asterisk Exchange (trunking) - Inter-Asterisk eXchange (IAX) is a communications protocol native to the Asterisk private branch exchange (PBX) software. Ham Radio Terms DV - Digital Voice RoIP - Radio over Internet Protocols. ASL - AllStarLink - AllStarLink is a network of Amateur Radio repeaters, remote base stations and ‚Äúhot spots‚Äù. DMR - Digital Mode Radio - Digital Mobile Radio (DMR), is an open digital radio standard that combines voice, data, features and applications together. MMDVM - Multi-Mode Digital Voice Modem NXDN - Next Generation Digital Narrowband USRP - Universal Software Radio Peripheral - The USRP protocol includes signaling (TX/RX transitions) and audio transfer using UDP. VKDMR - VK DMR - The Australia-Wide DMR+ Network. Features Covered Asterisk (ASL) Based PBX Hardware IP Telephones Cisco 7940 Yeelink x Softphones Linphone on Android VoIP Trunks Hamshack Hotline Public Switched Telephone Network (x2) Amateur Radio AllStarLink Analogue Node DMR+ (VK DMR) Digital Node Local MMDVM Hotspot Streaming Audio icecast integration Broadcastify Feeds Internet Radio PSTN InterconnectionI currently utilise two services for Public Switched Telephone Network interoperability. 10x DID Inbound Sydney geographically significant numbers with https://freepbxhosting.com.au/ ‚Üó 1x DID Inbound Tasmanian number with https://crazytel.com.au ‚ÜóBoth providers have the ability to make outbound PSTN telephone calls and can be prefix-dialled to specify or alternatively Aussie VoIP/FreePBX Hosting if 0 is dialed (for outside line) and a ITU compliant telephone number.TL;DRIf you want to jump straight to a relevant article in the series, here‚Äôs the links, if you‚Äôd like some more context around each article in the scope of this project, they each have their own introduction later: Part 1: The Options: Untangling the ham VoIP mess Part 2: Getting up and Running Part 3: Phones, Trunks &amp;amp; Inbound Part 4: Setting up the Hotspot Part 5: AllStarLink for Analogue Radio Part 6: DVSwitch Suite for Digital Radio Part 7: Streaming RadioPart 1: The OptionsThere is a huge array of options out there to consider for this solution; but entering this I knew I wanted to use a recent(ish) version of Asterisk as my primary VoIP server. But what to run on it?In our first article we take a look at the options available and evaluate a few along with some background to the software, what each part does and what ultimately led me to chose hamvoip as a starting point for this project.Untangling the ham VoIP messPart 2: Getting up and RunningGetting up and RunningPart 3: Phones, Trunks &amp;amp; InboundFirst we‚Äôre going to get the hardware VoIP phones I own up and running. Many years ago when running a small business from home I aquired two handsets, a Cisco 7940 and a Yealink.Part 4: Setting up the HotspotSetting up the HotspotPart 5: AllStarLink for AnalogueAllStarLink for Analogue RadioPart 6: The DVSwitch Suite for DigitalThe DVSwitch Suite for Digital RadioPart 7: Streaming RadioStreaminng Radio" }, { "title": "On Time - Adding a Stratum 1 Time Source", "url": "/posts/on-time/", "categories": "Radio, GPS", "tags": "software, pi, gps", "date": "2022-01-02 00:00:00 +1100", "snippet": "Relying on the internet for time seems a little silly to me when we have high-tech objects speeding past over-head giving us an incredibly accurate, non-connected time source, most folks call it GPS. Project Cost Build Time Assumed Knowledge $10-$60 4hrs Basic LinuxFamiliarity with Single Board Computers (eg Raspberry Pi) ¬† ¬† Minimum Electronics Knowledge (GPIO Use) BackgroundBut isn‚Äôt GPS about location?GPS is a system of 30+ navigation satellites circling Earth. A GPS receiver in your phone or other device listens for these signals. Using the time it takes signals to travel at the speed of light from the satellite to the receiver a location can be triangulated, often using 8 or more of the satellites available. In order to do this GPS satellites utilise multiple onboard atomic clocks - as clocks must be accurately synchronised in order to calculate the distances accurately.Even these small atomic clocks on GPS can drift over time and an update is sent to each of them twice a day to keep their time in sync with larger, more accurate, earth-based atomic clocks, that could not survive the journey to space.GPS broadcasts it‚Äôs signals using two frequencies known as L1 at 1575.42Mhz and L2 at 1227.6Mhz with timing signals and binary data known as alamanac and ephemeris. Spread spectrum signals are handled by using unique frequency hopping coding, uniquely idenitfying each satellite.If you‚Äôd like to deep-dive into the nitty-gritty technical details on how the Global Positioning System network works, the Australian Institute of Measurement‚Äôs Dr Bruce Warrington produced an excellent slide deck available in PDF from Engineers Australia entitled GPS and Time: Using Clocks in Space for Accurate Time on the Ground üìÑ‚ÜóThe term stratum means the same here as it does geologically, ‚Äúa layer or a series of layers of rock in the ground.‚Äù, though we‚Äôre talking about layers of accuracy in a time source, a clock receiving it‚Äôs time from a stratum 4 source is in itself a stratum 5 clock. The GPS clock in our configuration here is a Stratum 0 clock providing it‚Äôs time to a Stratum 1 time server.HardwareGPS ModulesJust about all GPS modules available utilise TTL-level UART (Serial) connectivity to deliver their data to a host. If you want accurate time keeping you also want a PPS (Pulse-Per-Second) signal from the module, allowing the host to perform an interrupt on this line and keep the clock in sync every second.All my early tests were conducted with a cheap GPS reciever designed for drones; though it appears many on the market are based on this chipset. Neo 6M v2 GPS Receiver and Antenna üõíYou can get PPS from one of these modules if you‚Äôre really keen, see below for more details.If you‚Äôd prefer a pre-built waterproof enclosure that includes the PPS line, you could consider an item more like this USB-based device, which has the benefit of not requiring any GPIO connectivity or soldering. VK-162 G-Mouse USB GPS Dongle Navigation Module External üõíComputer - As the Planespotting project is in production in the bedroom window with access for external small receiver antennas, the ADS-B project was selected to host the GPS clock after testing was done with the Balcony Test rig. The ARM Core processor in this Orange Pi is more than capable of providing multiple services:ADS-B Reciever - Orange Pi based PlaneSpottingGetting PPS from a Module without itOn the Neo modules without PPS broken out, you can do it yourself if you‚Äôre keen:This image and more info can be found at Alan Cashin‚Äôs A Low Cost Sidereal Clock‚Üó page. Used with permission.Tread CarefullyBe careful with the connectors and antenna for the Neo modules; on day 1 of experimenting I borked mine pretty badly; it took much time and effort to split and solder the tiny connector cable bac inside the antenna, it was midly successful for the remainder of early testing until a replacement unit arrived a week later.Getting Wired UpSkip this section if you‚Äôre using a USB module.If you‚Äôre going with the Neo module; you‚Äôll need to get your TTL UART TX/RX lines and VCC/GND connected up to a suitable serial port. On the Orange Pi I already had in production the most convenient pins for this were UART2 as they are handy to 3V3 and GND lines on the GPIO header pins.We connect the RX line from the Neo module to the TX line of the Orange Pi and the TX line to the Orange Pi‚Äôs RX line. As usual, VCC to 3V3 and GND to GND. I soldered and heatshrank female DuPont headers to the lines to make them easy to connect and disconnect from my various Orange Pi setups. GPIO3 makes a good candidate for the PPS interrupt line, especially if you‚Äôre using DuPont headers as I find that they hold better when neighbouring pins are also occupied. The usual advice of if it‚Äôs semi-permanent just solder it, always applies!This is my original test wiring, before using a PPS line for more accurate time keeping. Note the use of heatshrinking - solder of course under it, but I love heatshrink.You‚Äôll need to use the armbian-config command to setup UART2 (which appears as /dev/ttyS2) and the gpio-pps kernel modules; you can do this on the command line if you wish, but runnig armbian-config, selecting System and Hardware is the easiest option. Once these kernel modules are installed, reboot and we‚Äôre ready to install some software.The Module defaults to 9600 baud serial, 8 bits, No Parity, 1 stop bit. There are no CTS/RTS connections required.Of course if you opted for the USB model you can skip this wiring step and plug in the USB cable!The SoftwareInstalling the SoftwareAt bare minimum for a production system you‚Äôll want the universal GPS daemon - gpsd and the related client tools found in the debian gpsd-clients package. For debugging purposes you may also want miniterm found in the pyserial/python-serial package. A modern network time server is essential if you want to share the time from your new GPS clock to the rest of your network, I recommend ntpsec, a secure, hardened, and improved implementation of Network Time Protocol derived from NTP Classic, Dave Mills‚Äôs original.I‚Äôm a python dev primarilly so I added the python libraries for GPS too to have a play with in future.Let‚Äôs get the entire collection of suggested tools installed, inluding a couple of dependencies:apt update apt install miniterm pyserial python3-serial python3-gps python-gps gpsd gpsd-clients ntpsec Configuring GPSdI found just letting gpsd do it‚Äôs own thing with minimal instruction tends to work best, so edit the /etc/default/gpsd configuration file with your preferred text editor and update it to reflect your serial port device and -n which makes gpsd start using the device immediately rather than waiting in a low-power standby mode until it‚Äôs needed:DEVICES=&quot;/dev/ttyS2&quot;GPSD_OPTIONS=&quot;-n&quot;and tell armbian to enable and start the gps server.systemctl enable gpsdsystemctl start gpsdNow, ensure your antenna is connected to the module and has a good clear view of the sky without obstructions that will interfere with signals at the 1 gigahertz range that GPS operates in; and run gpsmon to see what your GPS is doing!If all goes well you‚Äôll see a count of the satellites connected and the current time and location (mine is redacted of course). The output of gpsmon may differ depending on the protocol being used with your GPS receiver, but all modes will result in an accurate time, location and quality indication (number of satellites used). If you‚Äôd like to do a deep-dive into the actual protocol used to exchange data between the module and host you can take a look at the NMEA 183 standard ‚Üó.Configuring NTP for Network TimeHaving been a sysadm since the late 90s; I‚Äôm reluctant to look at the ‚Äòmodern‚Äô NTP replacements like chrony, but I hear good things about them. The original ntpd by Dave Mills has been around forever and has some security issues, but a team of amazing volunteers has taken on this project and produced ntpsec, I highly recommend this option, so that‚Äôs the one detailed here.We can ignore the /etc/default/ntpsec file in this case; as it‚Äôs just sensible defaults; instead we‚Äôll take a look at /etc/ntpsec/ntp.conf, and the lines specifically for adding a shared memory or virtual network clock, these psuedo addresses are used for different types of clocks with 127.127.1.0 reserved for your local systemclock (not something that you should use); here‚Äôs some of the virtual network clocks defined by the NTP standard: Type 1 Undisciplined Local Clock (LOCAL) Type 8 Generic Reference Driver (PARSE) Type 17 Datum Precision Time System (GPS_DATUM) Type 20 Generic NMEA GPS Receiver (NMEA) Type 22 PPS Clock Discipline (PPS) Type 28 Shared Memory Driver (SHM) Type 30 Motorola UT Oncore GPS GPS_ONCORE) Type 33 Dumb Clock (DUMBCLOCK) Type 36 Radio WWV/H Audio Demodulator/Decoder (WWV) Type 46 GPSD NG client protocoAs our gps server and ntp server run on the same network we‚Äôre going to use the shared memory (28) driver, so add these two lines to the configuration:‚Ä¶server 127.127.28.0 minpoll 4 maxpoll 4 preferfudge 127.127.28.0 time1 0.0 refid GPS stratum 15‚Ä¶Ensure that ntpsec is enabled and start it off to test the GPS shared memory clock.systemctl enable ntpsecsystemctl start ntpsecWe‚Äôll cover the fudge line shortly, but for now the important thing to remember is to force this as a low-stratum clock (15) while we‚Äôre testing as to not affect our current network time until we‚Äôre ready to do so. We give it a reference ID (GPS) and an offset, that offset we will adjust soon.There‚Äôs other settings in this file you may want to look at like including some internet time sources as well; and armbian by default will use the public ubuntu pool of time servers.Did it work?Like gpsd, our time server has a tool which can be used to see how it‚Äôs performing; that tool is ntpq (network time protocol query), so we run the command ntpq -c peers on our sOrange Pi: remote refid st t when poll reach delay offset jitter=======================================================================================================*catsl################.org 139.99.222.72 3 u 11 32 377 0.3650 -0.0437 0.1351 serenity.catslair .DNS. 16 u - 32 0 0.0000 0.0000 0.0010 SHM(0) .GPS. 15 l 6 16 377 0.0000 -116.439 2.0221 time.cloudflare.com .NTS. 16 7 - 512 0 0.0000 0.0000 0.0010 au.pool.ntp.org .POOL. 16 p - 1024 0 0.0000 0.0000 0.0010-y.ns.gin.ntt.net 204.2.140.74 2 u 618 1024 1 14.0685 2.3213 0.1256+time.cloudflare.com 10.26.9.65 3 u 618 1024 1 14.0051 1.3210 0.1326+ntp3.ds.network 218.100.43.70 2 u 618 1024 1 62.0535 -0.5893 0.1282-pauseq4vntp2.datamossa.io 203.35.83.242 2 u 362 1024 1 15.3318 1.7495 0.4183-dns01.ntl02.privatecloudco.com 110.142.180.39 2 u 362 1024 1 19.8433 -0.8128 0.2023+ntp2.ds.network 162.159.200.123 4 u 362 1024 1 62.9446 -0.4334 0.2466NTP is usually very good at picking the best time sources; and reading the output above the first thing to notice is that SHM(0) (GPS) has a stratum 15 value - which is great, I don‚Äôt want it being authoritive in anyway until we‚Äôre sure of it‚Äôs accuracy.The offset is a concern, but we‚Äôll keep an eye on this over a day or so to see how it goes. You could write a quick shell script to reguarly run peers and record the value if you want a good dataset - but that‚Äôs probably excessive.‚Ä¶fudge 127.127.28.0 time1 .1229 refid GPS stratum 15‚Ä¶Play with the time1 value on the fudge line to adjust the offset to bring it inline with a low-stratum network time source. I found the value of .1229 worked well for me (and is close to the 116 milliseconds reported by peers initially.Once you‚Äôve got this value sorted, we can remove the fudged stratum setting and let ntp treat this like any other clock available to it:‚Ä¶server 127.127.28.0 minpoll 4 maxpoll 4 preferfudge 127.127.28.0 time1 .1229 refid GPS‚Ä¶Leaving NTP running for a little while (15 minutes or so), we come back to check on it again: remote refid st t when poll reach delay offset jitter=======================================================================================================*catsla#########.org 220.158.215.21 3 u 23 32 377 0.6142 0.0055 0.0864 serenity.catslair .DNS. 16 u - 32 0 0.0000 0.0000 0.0019+SHM(0) .GPS. 0 l 8 16 377 0.0000 -2.7497 2.9595 time.cloudflare.com .NTS. 16 7 - 512 0 0.0000 0.0000 0.0019 au.pool.ntp.org .POOL. 16 p - 1024 0 0.0000 0.0000 0.0019+220-158-215-21.broadband.telesmart.co.n 202.46.178.18 2 u 876 1024 1 14.7812 -0.6275 0.1317-table-moral.bnr.la 203.35.83.242 2 u 876 1024 1 26.4353 1.6811 0.1150+time.cloudflare.com 10.26.9.65 3 u 876 1024 1 13.8727 1.3652 0.3772+ntp2.ds.network 162.159.200.123 4 u 620 1024 1 62.9110 -0.2905 0.1322-combine-window.bnr.la 110.142.180.39 2 u 620 1024 1 25.0696 0.9505 0.1876-220-158-215-20.broadband.telesmart.co.n 202.46.178.18 2 u 620 1024 1 14.3489 -1.0887 0.3111We have a slight offset, and a huge jitter (which will be fixed when the PPS is finally connected) but a useable time!" }, { "title": "APRS WX Weather Station", "url": "/posts/weather-station/", "categories": "Smart Home", "tags": "weatherstation", "date": "2021-12-04 00:00:00 +1100", "snippet": "While usually I try to consolidate projects to deploy fewer devices, the decision on this project was to build it so that it would be useful for anyone wanting to build their own weather station.Originally this project was just to add some additional sensors to the balcony camera andradio system; but since it‚Äôs original inception it has become an entirely standalone project.Project GoalsThe initial incarnation of this project had the goal of replacing a Holman ‚ÄúiWeather‚Äù stationthat had been running in my apartment for over 10 years with it‚Äôs 433Mhz external sensor.Since getting my radio license and playing with APRS this scope of this project expandedto become a fully fledged, climate-monitoring weather station collecting as much data as possible,while working with a friend to install a more plug-and-play version of this at his has seen the project cover a range of hardware and microcontrollers.What I‚Äôm trying to present here though is options.The SoftwareUsually I would dive straight into a project‚Äôs hardware, what to buy and how to build it. Thecore of this project however is the software so that is what this article will be focussed on; the hardware however is covered in two other articles depending upon how you‚Äôre approaching yourbuild.ControllerThere are several options for the controller; and building those will be separated into separatearticles while this article focuses on the common parts between the two.The Tinkerer ApproachThanks to a range of existing infrastructure within my network for smart home and other monitoringI opted for utilising the MQTT Bridge that was already in place for Home Assistant, as this allowsall devices in the house to publish and/or subscribe to any ‚Äútopic‚Äù. My weather station is currently an aggregation of 3 devices, one off the shelf sensor and two ESP microcontrollers runningthe Arduino-based code that is published as part of this article.The Off-the-Shelf ApproachThanks to a range of existing infrastructure within my network for smart home and other monitoringI opted for utilising the MQTT Bridge that was already in place for Home Assistant, as this allowsall devices in the house to publish and/or subscribe to any ‚Äútopic‚Äù. My weather station is currently an aggregation of 3 devices, one off the shelf sensor and two ESP microcontrollers runningthe Arduino-based code that is published as part of this article." }, { "title": "The Balcony Multi-System (Radio and Camera)", "url": "/posts/balcony-multi-cam/", "categories": "Radio, ADS-B", "tags": "sbc, sdr, camera", "date": "2021-12-01 00:00:00 +1100", "snippet": "Starting from a coffee table next to my balcony and an RG58 cable running out to the antenna, this project takes that network Software Defined Radio Receiver andputs it on the balcony providing the centralised hub for an entire eco-system of balcony radio and sensors.There was never meant to be a camera on this project, though I had always wanted to put one on the balcony, this was becoming more important as antennas were beingmounted, but when a great weatherproof security camera enclosure was spotted on AliExpress the project started to take a different form:Desired Features Radio Receiver (one or two) Network Security Camera Ethernet / PoE Integration with the Weather Station Project via UARTIdeally I‚Äôm hoping to run dual receivers on this setup but this will largely depend upon powerconsumption and space in the final build.Optional Features Battery Backup Solar MonitoringParts ListMany of these parts decisions were made because of things I already had here, some alternatives are suggested, but as usual my projects are designed to motivate you to find interesting things to do and demonstrate how it can be done, not to give a detailed how-to. Feel free to contact me if you‚Äôd like help doing something similar!Prices in approx. Australian Dollars at the time of purchase.PC/Compute Orange Pi One üõí or the Official Shenzen Xunlong Store‚Üó on AliExpress ($40). Weatherproof Camera Enclosure‚Üó ($30) 12V Power Over Ethernet Passive POE‚Üó ($6)Radio Nooelec NESDR SMArTee XTR SDR üõí ($50) Nooelec LNA üõí ($30)Camera OVC2640 2MP CSI Camera üõí ($2)All my testing was performed using the Nooelec NESDR SMArt v4 Software Defined Radio üõí dongle, so that may be pictured in many of my pictures, however due to the need to mount the LNA inside the PVC pipe the XTR version will eventually be used. If powering the LNA using USB and not the bias-T input you should place a Nooelec DC-Block üõí between the SDR and LNA.Hardware yet to arrive GPS Receiver Infrared LightingCabling Ethernet Connectivity (reduce RF noise on my balcony) PoE to minimise cabling to balcony Coax to AntennaOrange Pi PinoutSunXi boards use a different naming system to most others, the board can be powered using 5V connected to either of the 5V marked pins (2 and 4).Addionally pins PG6 and PG7 were used for some early testing for the related Weather Station project.The EnclosureI‚Äôm really happy with this enclosure, while fairly small at 180x105x77mm; there‚Äôs enough room to get all the functionality I want inside fairly comfortably. The AU $20 spent got me the aluminium enclosure with heavy duty cover, waterproof front lens and rear panel with waterproof cable connectors, an additional hole will be requied for the PoE connector soon.The First RadioI‚Äôve been using an RTL radio on this Pi for some time now, infact it was the running the first ADS-B monitoring centre here at VK2WAY before the project that made it operational 24x7. Both SoapySDR and rtl_tcp are used here for providing network access to the RTL SDR when needed. This radio is currently a Nooelec RTL SDR, Low Noise Amplifier and DC Block, powered via USB because I didn‚Äôt think ahead and get the SDR with bias-T power to the antenna.When the LNA, DC Block and SDR are combined back-to-back and connected to the USB connector of the Orange Pi, it becomes quite long and obviously not going to fit inside of the enclosure.This isn‚Äôt a bad thing, because of heat and RF noise we‚Äôre going to keep the RTL SDR, LNA and other radio equipment outside of this main enclosure and run USB to it. This again keeps the project modular too, allowing the SDR and antennas to be disconnected from this compute device and used with any other laptop or device needed.Getting the PowerTo reduce the overhead of what is required in the device itself, I decided to use an existing 5V 3A power supply and a ‚Äúpower over ethernet converter‚Äù that accepts any DC input and delivers it on the output, rather than a conventional standard PoE Supply. This may be revised in the future depending on the cable length that ends up being between the injector and extractor, but for now testing has started using this method.The converters can be picked up very cheaply on AliExpress at 12V Power Over Ethernet Passive POE including waterproofing and mounting hardware.On the splitter end of the adapter I removed the DC jack and replaced it with two duPont female header pins to directly utilise the 5V and GND pins provided on the Pi for external power. Neatly heatshrink the individual connectors, be sure sure to add a litter larger heatshrink first to bring over to top for a profesional finish!More testing is required on exactly how long and what cable will be needed to ensure adequate power gets along whatever the final run for this device is, so keep in mind that it will unlikely remain at this 5V, though we‚Äôre going to try!I did a quick test of the cable with a multimeter and everything looked fine, now to trust the documentation that the 5V and GND pins ARE the ones that they say they are on the Orange Pi, connect them up and test it out. It blinks into action and starts boot!" }, { "title": "Xiaomi Aqara Button Homeassistant Blueprint", "url": "/posts/xiaomi-lights/", "categories": "Smart Home", "tags": "smarthome, homeassistant", "date": "2021-11-09 00:00:00 +1100", "snippet": "ActionsI love these Xiami buttons and used them to replace all of the light switches in the house, each button is configured so that: Single tap - nearest light Double tap - next nearest light Long press - make any light on bright (or brighten both if both off)The blueprint supports any lighting entities/areas or devices as the two targetdevices; any button as the input, however it must contain the ‚Äòclick_type‚Äô attributewith a value of ‚Äòsingle‚Äô, ‚Äòdouble‚Äô or ‚Äòlong_click_press‚Äô, in the event data, while it may work with other buttons it will always work best with Xiaomi Aqara buttons.Products required Xiaomi Aqara ZigBee Buttons üõí Xiaomi Aqara ZigBee Gateway üõíI strongly encourage folks to consider a full DIY ZigBee solution utilising aUSB ZigBee radio, along the lines of ConBee Universal USB ZigBee Radio üõíImport this BlueprintImport this Blueprint to your Home Assistant instance using the URL: https://vk2way.id.au/posts/xiaomi-lights/xiaomi_lights.yaml" }, { "title": "PrettyFly (Emoji Heavy) ADS-B Report Generator", "url": "/posts/prettyfly/", "categories": "Radio, ADS-B", "tags": "software, pi, sdr", "date": "2021-11-02 00:00:00 +1100", "snippet": "Warning: This is a work in progressPrettyFly is a first attempt at turning ADS-B data into interesting reports; it depends on Tar1090 from wiedehopf. PrettyFly is currently onlyable to travel back in time the duration of tar1090‚Äôs flight path archive.usage: prettyfly [options]optional arguments: -h, --help show this help message and exit --hours HOURS --data-dir [DATA_DIR] --tar-rundir [TAR_RUNDIR] --tar-db [TAR_DB] --lon LON --lat LATPrettyFly requires the tar1090 database and runtime directories for processing the data archive.Project source code: PrettyFly" }, { "title": "Aquarium Monitor ESP8266/MQTT", "url": "/posts/aqua-mon/", "categories": "Electronics, Smarthome", "tags": "smarthome, homeassistant, mqtt, esp", "date": "2021-10-29 00:00:00 +1100", "snippet": "Coming Soon" }, { "title": "Take Full Control of your Smart Home", "url": "/posts/take-full-control/", "categories": "Smart Home", "tags": "smarthome, homeassistant, talks, video", "date": "2021-10-28 00:00:00 +1100", "snippet": "On 29th August 2019 I presented a talk at Sydney Infrastructure Coder‚Äôs meetup ‚ÄúHouse coders‚Äù:You can find more events from Sydney Infrastructure Coders at meetup.com‚Üó.Projects Mentioned Welcome to my Smart Home Xiaomi Button Blueprint Aquarium Monitoring ESP8266" }, { "title": "Welcome to my Smart Home", "url": "/posts/homeassistant/", "categories": "Smart Home", "tags": "smarthome, homeassistant", "date": "2021-10-27 00:00:00 +1100", "snippet": "Software Ecosystem Ubuntu 21.10 on Intel NUC Homeassistant (latest) Mosquitto MQTT BrokerSmart Home Devices Google Home Google Nest Hub Google Home Mini x 2 TCL 4k Android TV JBL Android Sound Bar Amazon Echo Dot Xiaomi MiBox S (Android STB) Xiaomi Aqara Gateway Night Light Xiaomi Aqara Smart Button (x3) Xiaomi Aqara Dual Button v2 Xiaomi Aqara Temperature &amp;amp; Humidity Sensor (x2) Xiaomi Aqara Door/Window Switch Xiaomi Aqara Motion Detection (x3) Broadlink SP3Mini WiFi A/C Switch (x2) YeeLight Color LED Light Bulb (x5) TP-Link HS100 WiFi A/C Switch TP-Link Color LED Light Bulb TP-Link White LED Light Bulb Kogan SmarterHome‚Ñ¢ 10W Ambient RGBW Smart Bulb (x2) NodeMCU MQTT w/Submersible Temperature Sensor (Aquarium) NodeMCU MQTT Lounge Room Humidity/Temperature/PressureCurrently Out of Service NodeMCU MQTT FastLED LED Strip (WS2811 3m 90 LED 2A) Front Door Reed Sensor (wired to RFID Scanner)Retired Gear Broadlink RM2 Pro WiFi Infra-Red Blaster Roku Streaming Stick Kodi (Raspberry Pi) Kodi (RetroOrangePi on an OrangePi One) NodeMCU MQTT Bedroom Temperature/Humidity Sensor NodeMCU MQTT RFID Scan In/OutIncomplete Projects ESP32 based MQTT Display Panel Dangerous Prototypes USB IRToy (Infrared Recevier/Sender) Bluetooth Remote Control (for Lights)" }, { "title": "Planespotting - My ADS-B Setup", "url": "/posts/adsb/", "categories": "Radio, ADS-B", "tags": "sbc, pi, sdr", "date": "2021-10-26 00:00:00 +1100", "snippet": "Ever wondered where FlightAware or FlightRadar get all the info they show on their sites? Folks like me (and maybe you too!). This article describes what ADS-B is, how I receive it and how I display it, report on it and ultimately send it on to other folks. Project Cost Build Time Assumed Knowledge $60-$120 2hrs-1day Basic LinuxFamiliarity with Single Board Computers (eg Raspberry Pi) What is ADS-B?ADS-B is a system in which electronic equipment onboard an aircraft automatically broadcasts the precise location of the aircraft via a digital data link. The system involves an aircraft with ADS-B determining its position using GPS. A suitable transmitter then broadcasts that position at rapid intervals, along with identity, altitude, velocity and other data. Dedicated ADS-B grounds stations receive the broadcasts and relay the information to air traffic control for precise tracking of the aircraft. Automatic - Requires no pilot input or external interrogation. Dependant - Depends on accurate data from the aircraft‚Äôs navigation system (eg. GPS). Surveillance - Provides aircraft surveillance data to facilities that require the information. Broadcast - Information is continually broadcast for monitoringHere in Australia ADS-B is mandatory on all aircraft operating above FL300 (30,000ft).ADS-B data is broadcast every half-second at 1090MHz using a 50kHz pulse-poition modulated digital data link, and has a very digital look when viewed on an RF waterfall:Broadcasts may include: Flight Identification (flight number callsign or call sign) ICAO 24-bit Aircraft Address (globally unique airframe code) Position (latitude/longitude) Position integrity/accuracy (GPS horizontal protection limit) Barometric and Geometric Altitudes Vertical Rate (rate of climb/descent) Track Angle and Ground Speed (velocity) Emergency indication (when emergency code selected) Special position identification (when IDENT selected) The ability of a ground station to receive a signal depends on altitude, distance from the site and obstructing terrain. The maximum range of each ground station can exceed 250 nautical miles. In airspace immediately surrounding each ground station, surveillance coverage extends to near the surface.My ADS-B Receiver SetupThis is the second generation of ADS-B receiver running at my station; the first generation was located on my balcony and not capable of 24x7 operation; this has since been relocated witha dedicated Orange Pi, reciever and antenna.You can substitute anything you want for the Orange Pi, as long as it can run Linux (Armbian ideally if you want to make it as easy as my setup was) and has USB support for the USB SDR Dongle. I am a huge fan of the Orange Pi PC (1GB) model as you can pick it up from the official store for around $40AUD. Orange Pi One üõí or the Official Shenzen Xunlong Store‚Üó on AliExpress. Nooelec NESDR SMArt v4 Software Defined Radio üõí ¬ºŒª Mini Whip (trimmed supplied antenna) Be aware also many RTL-SDRs are NOT well engineered and have large drifts or are only designed to pick up strong broadcast FM/DVB-T signals, read reviews and buy from a reputable source. I highly recommend this one.If you can get it though get this, I‚Äôve been wanting a second one but they haven‚Äôt been available for sometime. FlightAware Pro Stick USB Receiver üõíOptional Extras 17th Nov 2021 Edit: While building the double Moxon array antenna for 70cm satellite work the LNA and DC-Filter destined for that project are being tested on my ADS-B project. This will be occuring for the next week and a decision will be made as to modifications to the ADS-B configuration based on the performance of these devices. If you‚Äôre using the FlightAware Pro Stick, don‚Äôt bother with an LNA. There‚Äôs an integrated 20dB 1090Mhz optimised amplifier that your LNA will not improve. Noelec LNA üõí Noelec DC-Block üõíGetting StartedThe first task was to take the mini magnetic mount antenna and fix it. We do this by trimming it down to an exact ¬º wavelength required for 1090Mhz reception - or 69mm to the base or ground plane.My antenna is currently mounted outside my bedroom window and is operating without a ground plane,the next thing I plan to rectify to improve. While located along a north facing wall of a innercity apartment building; this antenna currently provides a reasonable range.As with all radio receiving, the placement of the antenna seems to have way more impact on your reception than any particular antenna and I‚Äôve experimented with various antennas in this setup overthe last few months even the improvement by adding a simple ground plane to this antenna wasn‚Äôt worthattracting unwanted attention to it. 1090Mhz is in the gigahertz range and as we increase in frequencyRF signals penetrate less material, line of site is ideal, so pick a place with a nice large sector of the sky visible if possible for the placement of your antenna.Typical Air Traffic and RangeA typical 48 hours of flight paths picked up by my receiver looks like:The current setup easily picks up most traffic within 50nm and regularly reaches closer to 100nm. This was greatly improved with a ground plane on the antenna as was used during the first generationof this project however a more concealed antenna was required for 24x7 operation.The Nuts and BoltsMaking use of the current infrastructure at home including the 24x7 server controlling Home Assistant,MQTT and the smarthome projects; the client/server model was taken for ADS-B Monitoring.The radio and main server are seperated in my environment purely for convenience; this also allows tar1090to manage a much larger dataset and more storing and development opportunities around the ads-b data; thisdetails how that‚Äôs done.The Radio Radio1 - Orange Pi with USB RTL-SDR Dongle Armbian 21.08.3 Focal (Linux 5.10.60-sunxi)‚Üó Dump1090-mutability‚Üó Combine1090‚Üó Note: A FlightAware Pro Stick is pictured above. While I‚Äôve had excellent results with this product, it is regularly unavailable. I highly recommend the Nooelec NESDR SMArt v4 SDR linked at the top of this article.If your Orange Pi is brand new or you‚Äôre new to Orange Pi and Armbian, you should get started with the Armbian Getting Started Guide‚Üó.Regardles of which Linux you‚Äôre on you‚Äôll want to make sure that the RTL DVB kernel modules are disabled to allowaccess for the RTL-SDR drivers.blacklist dvb_usb_rtl28xxublacklist rtl2832blacklist rtl2830You can rebuild the module dependency tree by running sudo depmod -aDump1090I‚Äôve been using the packaged version of dump1090-mutability that‚Äôs in the apt repositories for Armbian;just apt install dump1090-mutability to get it running. Configurtion is very straight forward, use yourfavourite text editor to update the /etc/default/dump1090-mutability file.You‚Äôll definitely want to update your LON and LAT to as close as you can find for the location of your antenna. I do this to 6 decimal places. DEVICE is useful if you‚Äôre running more than one radio on your computer. I have no problems decoding ADS-B with GAIN set to ‚Äúmax‚Äù and if you‚Äôve got a good dongle PPM can beleft at 0 (though with some cheap dongles I‚Äôve seen this need to go as high as 160!).Dump1090 has it‚Äôs own web interface to show you what‚Äôs in the air right now around you; you can reach thisat http://IP-ADDRESS/dump1090 if you have lighttpd running and have installed dump1090 from the Armbian packages. Note: Sydney Airport has a noise curfew overnight and we see little traffic in this area until 6am. This screen shot was taken at 0100 hours, local time.If you‚Äôre not running a split client/server model, you should leave this combine1090 step out, it‚Äôs only useful for pushing data between dump1090 instances. You can run tar1090, PrettyFly and the data feeders mentioned in the Server section on the same device runningyour radio.Combine1090Combine1090 is used to forward the ADS-B traffic between the dump1090 protocol using the defined networkports; usually this is setup on the server side to connect to the remote radio but it made much more sense in thisconfiguration for the radio to run in push mode. Under the hood Combine1090 is just a shell script and systemd startupwrapper around the swiss-army knife utility familiar to every network and system administrator, nc (netcat). This simplyconnects one port to another in a pipe for you, in our case the output RAW data from dump1090 on our radio to the RAW in-port on dump1090 running on our server (below for the server-end).This additionally allows either, or both radio1 and radio3 to take the role of ADS-B monitoring; which isuseful when one is taken offline for maintenance, upgrades or changes.Configuration of combine1090 is performed through environment variables configured in the /etc/default/combine1090 file;SOURCES=127.0.0.1PORTS=30005TARGET=houseserver.lan:30004Restart tar1090 using systemctl restart combine1090You should leave the dump1090 options (RECIEVER/DECODER and last few lines of the default config) commented out and utilise the packaged dump1090-mutability (or dump1090-fa from piaware) for Armbian.I highly recommend you add the rtl-sdr package as well for other handy tools (like rtl_tcp to remote control the radio across the network, but more on this in a future post)! Combine1090 will keep trying to connect until your server is online, so move on to the next section already.The ServerThe server already existed on my network; if you‚Äôre running without it you can leave combine1090 off for now. It‚Äôs worth considering the split as tar1090‚Äôs data storage is not well optimised for large amounts of data, and I now keep 48 hours offight history in the tar1090 data file. On Server Ubuntu 21.10 Dump1090-mutability‚Üó Tar1090‚Üó If you chose to run tar1090 directly on a Pi, be aware of the processing time required for a large number of flights and adjust your retention time.Tar1090Tar1090 provides a better map and UI in my opinon than dump1090 but the more powerful feature it provides is time travel - being ableto view your history for it‚Äôs set retention period.Once installed alongside lightttpd (or nginx in my case, however nginx reverse proxy configuration is beyond the scope of thisarticle) you can find tar1090 at http://IP-ADDRESS/tar1090 and for the historic view http://IP-ADDRESS/tar1090?pTracks. Note: The ‚Äòrange‚Äô screenshot earlier in this article shows tar1090 with the ‚ÄòpTracks‚Äô URL query-string argument.Installation is very easy, following the instructions from the tar1090 project; once installed you can modify the /etc/default/tar1090 file and modify the relevant variables.The important one to update:# hours of tracks that /?pTracks will showPTRACKS=48Restart tar1090 using systemctl restart tar1090Related Projects PrettyFly - Prettified ADS-B reporting, work in progress.The PrettyFly project is a work in progress which I will soon be developing further. The current version utilises thetar1090 pTracks data files (hence the 48 hour rentention I like to run), but later research has indicated that the raw or CSVprotocol from dump1090 would be easier to process into the kind of reports I want to run. For now though check out thepage above for some of the reporting that is done by this first foray into writing code to report on ADS-B data.Some exampel output from PrettyFly:By Country of Registration 1. üá¶üá∫ Australia (124) 2. üá∫üá∏ United States (11) 2. üá®üá≥ China (11) 3. üá∏üá¨ Singapore (8) 4. üá≥üáø New Zealand (4) 5. üá¶üá™ United Arab Emirates (3) 5. üá≤üáæ Malaysia (3) 6. üáπüáº Taiwan (2) 6. üáØüáµ Japan (2) 7. üáπüá≠ Thailand (1) 7. üá±üá∞ Sri Lanka (1) 7. üá∞üá∑ South Korea (1) 7. üá∑üá∫ Russia (1) 7. üá∂üá¶ Qatar (1) 7. üáµüá≠ Philippines (1) 7. üá¨üá∑ Greece (1) 7. üá´üáØ Fiji (1)Along with more detailed categorisation and reporting:Flights of Interestüöë Medical 9: VH-RFD/AM228, VH-RFD/AM293, VH-RFD/AM277, VH-AMQ/AM242, VH-PWX/AE913, VH-ZSU/CFH23, VH-AMR/AM214, VH-NAJ/AM227, VH-ZCY/CFH21‚õë Rescue 1: VH-TJE/RSCU201‚úàÔ∏è RAAF 4: A36-002/ASY326, A97-465/TROJ26, A30-003/WGTL15, A56-003/EVY55üí£ Military Contractor 4: VH-SLF/FRSC11, VH-SLF/FRSC31, VH-LJU/FRSC12, VH-LRH/FRSC32It was named PrettyFly mostly because of it‚Äôs unapologetic use of emoji.You can find the PrettyFly project at https://github.com/jaredquinn/prettyfly‚Üó, including the(almost) daily updated data/*.json files for operators and aircraft classification.Live DataI additionally send my data to my own Tar1090 instance running in the cloud and in future posts will be exploring additional tools,bringing in data for more stations and a range of other related articles.I host the live tools on Vultr, you can sign up using my referral link‚Üó.Data FeedersIf you‚Äôre going to run this kind of receiver, it‚Äôs worth feeding the data to FlightAware at minimum as the benefits they provide (buiness plan access) is worth it alone; however as a believer in open-data and sharing, I particularly like ADSBHubas they will provide the global ‚Äòfirehose‚Äô of ADS-B data from all 2,000 contributors in their community.I feed data to: VK2WAY Live ADS-B Hub Station VK2WAY/SYD1‚Üó FightAware - FlyByNightSydney‚Üó OpenSky Network‚Üó FlightRadar 24 (Radar T-YMCO1)Running the split client/server mode also gives me the benefit of running all my data feeders in the centralised location, not requiringa setup on each of the radio receiver devices or future versions of it, making configuration management much easier." }, { "title": "Introducing The Dirge (A CAN Bus)", "url": "/posts/the-bus/", "categories": "Electronics, The Dirge CAN Bus Module", "tags": "can, esp, iot", "date": "2021-10-24 00:00:00 +1100", "snippet": "Dirge‚Äôs BusIntro‚Ä¶The ‚ÄúDirge‚Äù SensorThe Sensor Project on GitHubFeatures TPS54202 Based 12V to 5V Converter Dual AO4407A 30V 12A Switching channels (12V SW1 &amp;amp; SW2) 12V Input Voltage Monitoring AHT20 Temperature/Humidity Sensor Jumper selectable Supply MCU 5V from USB, 5V BUS or 12V Supply Enable/Disable 12V to 5V buck jumper MCP2562 / MCP2515 5V CAN (Controller Area Network) Bus Driver 4 Normally Open Button Inputs (supports momentary &amp;amp; toggles) 2 TTL (3V3) Output Signals (not for power supply) TXB0104PWR IC 4bit Bi-directional Level Shifter UART TX / RX LED Pixel Pusher 5V Data CH1/CH2 6 DIP Switches 1-4=Config/Multiplexed with BTN INs 5=Enable 5V Level Shifter PXL/UARTs 6=Terminate CAN bus with 120Ohm " }, { "title": "Welcome to vk2way.id.au", "url": "/posts/welcome/", "categories": "General", "tags": "website", "date": "2021-10-23 00:00:00 +1100", "snippet": "Of course I need to start another project, it wouldn‚Äôt be a day in the life of without! But here we are again at the start of something new.I am patiently waiting out the time between sitting &amp;amp; passing the assessment (the Certificate of Proficiency required for the Foundation Level Amature Radio icense) and the Australian Communications &amp;amp; Media Authority granting my license and callsign. As you can probably tell already the callsign that has been granted is VK2WAY - Whiskey - Alpha - Yankee.I decided to put this blog up, firstly because it‚Äôs been years since I regularly commited to writing regularly, but more importantly because I want to collect information on all the related projects in one place. This will include electronics, programming, radio and just about anything else that takes my fancy." } ]
